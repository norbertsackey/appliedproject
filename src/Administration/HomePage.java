/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Administration;

import Accounting.EditExpense;
import Accounting.EditRevenue;
import Login.LoginPage;
import Messaging.AddMessage;
import java.awt.Image;
import java.awt.Rectangle;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jacque
 */
public class HomePage extends javax.swing.JFrame {

    public static DefaultTableModel jade = new DefaultTableModel();
    public static DefaultListModel jinx = new DefaultListModel();
    public static String adminName;
 

    public static int personID = 0;
    Connection con = null;
    PreparedStatement pst = null;
    java.sql.ResultSet u = null;

    public HomePage() {
        initComponents();
        this.setLocationRelativeTo(null);
        String url = "jdbc:mysql://localhost/applied_project";
        String user = "root";
        String password = "";

        try {

            Class.forName("com.mysql.jdbc.Driver").newInstance();
            con = DriverManager.getConnection(url, user, password);
        } catch (Exception ex) {
            Logger lgr = Logger.getLogger(AddStudent.class.getName());
            lgr.log(Level.SEVERE, ex.getMessage(), ex);

        }

        jButton1.setToolTipText("Add New Staff");
        jButton2.setToolTipText("Add New Student");
        jButton4.setToolTipText("Add New Teacher");
        jButton5.setToolTipText("Search");
        jButton6.setToolTipText("New SMS Message");
        jButton7.setToolTipText("Delete");
        jButton8.setToolTipText("Edit");
        jButton9.setToolTipText("Export");
        
  
        StudentData x = new StudentData();
        u = x.getAllStudents();
        try{
        buildTableModel(u);
        }
        catch (Exception e) {
            e.printStackTrace();
    } 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem3 = new javax.swing.JMenuItem();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 33, 55));

        jPanel1.setBackground(new java.awt.Color(94, 176, 153));
        jPanel1.setForeground(new java.awt.Color(102, 102, 102));
        jPanel1.setToolTipText("");

        jButton1.setBackground(new java.awt.Color(230, 126, 34));
        jButton1.setForeground(new java.awt.Color(230, 126, 34));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Administration/School Director-48.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(230, 126, 34));
        jButton2.setForeground(new java.awt.Color(230, 126, 34));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Administration/Student-48.png"))); // NOI18N
        jButton2.setBorder(null);
        jButton2.setBorderPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(230, 126, 34));
        jButton4.setForeground(new java.awt.Color(255, 0, 0));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Administration/Classroom-82.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(236, 162, 95));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Administration/glyphicons-28-search.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jButton5KeyTyped(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Administration/School-48.png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Lucida Bright", 0, 24)); // NOI18N
        jLabel4.setText("GIS AdminSys ");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "students", "staff", "messages", "expenses", "revenues" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(230, 126, 34));
        jButton6.setForeground(new java.awt.Color(255, 0, 0));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Administration/New Message-48.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(230, 126, 34));
        jButton7.setForeground(new java.awt.Color(255, 0, 0));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Administration/Delete-48.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jTable1.setModel(jade);
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Administration/glyphicons-4-usera.png"))); // NOI18N

        jLabel2.setText("Admin1 ");

        jButton8.setBackground(new java.awt.Color(230, 126, 34));
        jButton8.setForeground(new java.awt.Color(255, 0, 0));
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Administration/Edit File-48.png"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(230, 126, 34));
        jButton9.setForeground(new java.awt.Color(255, 0, 0));
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Administration/Export-48.png"))); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton3.setText("view details");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(98, 98, 98))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(31, 31, 31))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(113, 113, 113)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1279, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(23, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1)))
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53))
        );

        jMenuBar1.setBackground(new java.awt.Color(94, 176, 153));

        jMenu1.setBackground(new java.awt.Color(94, 176, 153));
        jMenu1.setText("File");

        jMenuItem4.setText("New");
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setBackground(new java.awt.Color(94, 176, 153));
        jMenu2.setText("Edit");

        jMenuItem2.setText("Edit Student");
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        jMenu3.setBackground(new java.awt.Color(94, 176, 153));
        jMenu3.setText("Help");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        RemoveSelectedData(jTable1);

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        AddMessage msg = new AddMessage();
        msg.setVisible(true);

    }//GEN-LAST:event_jButton6ActionPerformed

    @SuppressWarnings("related to input file ")
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        AddTeacher newt = new AddTeacher();
        newt.setVisible(true);

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        AddStaff newst = new AddStaff();
        newst.setVisible(true);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        AddStudent news = new AddStudent();
        news.setVisible(true);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    this.getSelectedData(jTable1);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton5KeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_jButton5KeyTyped

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jTextField1KeyPressed

    
    
    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        String category = (jComboBox1.getSelectedItem().toString()).trim();
        String query = jTextField1.getText();
        ResultSet rs;
        //jinx.clear();
        try {
            java.sql.Statement s = con.createStatement();
            if (category.equalsIgnoreCase("students")) {
                rs = s.executeQuery("Select * from students where firstname  like '%" + query + "%' or middlename  like '%" + query + "%' or lastname  like '%" + query + "%'");
            } else if (category.equalsIgnoreCase("staff")) {
                rs = s.executeQuery("Select * from staff where firstname  like '%" + query + "%' or middlename  like '%" + query + "%' or lastname  like '%" + query + "%'");
            } else if (category.equalsIgnoreCase("teachers")) {
                rs = s.executeQuery("Select * from teachers where firstname  like '%" + query + "%' or middlename  like '%" + query + "%' or lastname  like '%" + query + "%'");
            } else if (category.equalsIgnoreCase("revenues")) {
                rs = s.executeQuery("Select * from revenues where firstname  like '%" + query + "%' or middlename  like '%" + query + "%' or lastname  like '%" + query + "%'");
            } else {
                rs = s.executeQuery("Select * from expenses where firstname  like '%" + query + "%' or middlename  like '%" + query + "%' or lastname  like '%" + query + "%'");
            }

            this.buildTableModel(rs);
            this.jTable1.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
    }//GEN-LAST:event_jTextField1KeyTyped
    }
    
    
    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
          String category = (jComboBox1.getSelectedItem().toString()).trim();
        ResultSet u;
        String q1 = null;
        try {
            java.sql.Statement s = con.createStatement();
            if (category.equals("students")) {
                q1 = "SELECT * from students ";
            } else if (category.equals("staff")) {
                q1 = "SELECT * FROM staff";
            } else if (category.equals("messages")) {
                q1 = "SELECT * FROM messages";
            } else if (category.equals("expenses")) {
                q1 = "SELECT * FROM expenses";
            } else if (category.equals("teachers")) {
                q1 = "SELECT * FROM teachers";
            } else {
                q1 = "SELECT * FROM revenues";
            }
            u = s.executeQuery(q1);
            //  int numRows = HomePage.jade.getRowCount();
            this.buildTableModel(u);
            this.jTable1.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.viewSelectedData(jTable1);
       
    }//GEN-LAST:event_jButton3ActionPerformed
    
    
    
    
    

    public void buildTableModel(ResultSet rs) throws SQLException {

        ResultSetMetaData metaData = rs.getMetaData();
        Vector<String> columnNames = new Vector<String>();
         int columnCount = metaData.getColumnCount();
        
        for (int column = 1; column < columnCount; column++) {
            columnNames.add(metaData.getColumnName(column));

        }
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
      
  
      if ((columnNames.get(0)).equalsIgnoreCase("studentID")==false) {
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));

            }
            data.add(vector);
        }
      }
       
       
     else  {
           columnCount = 9;
           String[] newColNames = {"studentID","firstname", "middlename", "lastname", "grade", "gender","Nationality", "DateEnrolled", "BirthDate"};
           columnNames.clear();
            for (int column = 0; column < 9; column++) {
             columnNames.add(newColNames[column]);
         }
         
            data = new Vector<Vector<Object>>();
            while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 0; columnIndex < 9; columnIndex++) {
                vector.add(rs.getObject(newColNames[columnIndex]));

            }
            data.add(vector);
    }
     

    }
        DefaultTableModel xf = new DefaultTableModel(data,columnNames);
        jade = xf;
        jTable1.setModel(jade);
    }
    
    
    
    

    public void RemoveSelectedData(JTable table) {
        // Get the selected row from the table.
        int selectedRow = table.getSelectedRow();
        ResultSet re = null;
        if (jade.getColumnName(0).equalsIgnoreCase("StudentID")) {
            try {
                int refID = (int) table.getValueAt(selectedRow, 0);
                java.sql.Statement s = con.createStatement();
                String q1 = "delete FROM students where studentID = " + refID + " ";
                s.executeUpdate(q1);
            } catch (SQLException x) {
                x.printStackTrace();
            }
            try {

                java.sql.Statement s = con.createStatement();
                String q1 = "SELECT * students";
                re = s.executeQuery(q1);
                this.buildTableModel(re);
                this.jTable1.setVisible(true);
            } catch (SQLException x) {
                x.printStackTrace();
            }
        } else if (jade.getColumnName(0).equalsIgnoreCase("StaffID")) {
            try {
                int refID = (int) table.getValueAt(selectedRow, 0);
                java.sql.Statement s = con.createStatement();
                String q1 = "delete FROM staff where staffID = " + refID + " ";
                s.executeUpdate(q1);
            } catch (SQLException x) {
                x.printStackTrace();
            }
            try {

                java.sql.Statement s = con.createStatement();
                String q1 = "SELECT * from staff";
                re = s.executeQuery(q1);
                this.buildTableModel(re);
                this.jTable1.setVisible(true);
            } catch (SQLException x) {
                x.printStackTrace();
            }
        }
        else if (jade.getColumnName(0).equalsIgnoreCase("messageID")) {
            try {
                int refID = (int) table.getValueAt(selectedRow, 0);
                java.sql.Statement s = con.createStatement();
                String q1 = "delete FROM messages where messageID = " + refID + " ";
                s.executeUpdate(q1);
            } catch (SQLException x) {
                x.printStackTrace();
            }
            try {

                java.sql.Statement s = con.createStatement();
                String q1 = "SELECT * from messages";
                re = s.executeQuery(q1);
                this.buildTableModel(re);
                this.jTable1.setVisible(true);
            } catch (SQLException x) {
                x.printStackTrace();
            }
        }
        else if (jade.getColumnName(0).equalsIgnoreCase("revenueID")) {
            try {
                int refID = (int) table.getValueAt(selectedRow, 0);
                java.sql.Statement s = con.createStatement();
                String q1 = "delete FROM revenues where revenueID = " + refID + " ";
                s.executeUpdate(q1);
            } catch (SQLException x) {
                x.printStackTrace();
            }
            try {

                java.sql.Statement s = con.createStatement();
                String q1 = "SELECT * from revenues";
                re = s.executeQuery(q1);
                this.buildTableModel(re);
                this.jTable1.setVisible(true);
            } catch (SQLException x) {
                x.printStackTrace();
            }
        }
        
         else if (jade.getColumnName(0).equalsIgnoreCase("expenseID")) {
            try {
                int refID = (int) table.getValueAt(selectedRow, 0);
                java.sql.Statement s = con.createStatement();
                String q1 = "delete expenses where expenseID = " + refID + " ";
                s.executeUpdate(q1);
            } catch (SQLException x) {
                x.printStackTrace();
            }
            try {

                java.sql.Statement s = con.createStatement();
                String q1 = "SELECT * from expenses";
                re = s.executeQuery(q1);
                this.buildTableModel(re);
                this.jTable1.setVisible(true);
            } catch (SQLException x) {
                x.printStackTrace();
            }
        }
        
        else {
            int refID = (int) table.getValueAt(selectedRow, 0);
            try {
                java.sql.Statement s = con.createStatement();
                String q1 = "delete FROM teachers where teacherID = " + refID + " ";
                s.executeUpdate(q1);
            } catch (SQLException x) {
                x.printStackTrace();
            }
            try {

                java.sql.Statement s = con.createStatement();
                String q1 = "select * FROM teachers";
                re = s.executeQuery(q1);
                this.buildTableModel(re);
                this.jTable1.setVisible(true);
            } catch (SQLException x) {
                x.printStackTrace();
            }
        }

    }
    
    public void viewSelectedData(JTable table){
        ResultSet u;
        String q1 = null;
        int selectedRow = table.getSelectedRow();

        if (jade.getColumnName(0).equalsIgnoreCase("studentID")) {
            ViewStudent stu = new ViewStudent();
            personID = Integer.parseInt((table.getValueAt(selectedRow, 0)).toString());
            stu.getjTextField17().setText(table.getValueAt(selectedRow, 1) + "");
            stu.getjTextField1().setText(table.getValueAt(selectedRow, 2) + "");
            stu.getjTextField18().setText(table.getValueAt(selectedRow, 3) + "");
            stu.getjTextField19().setText(table.getValueAt(selectedRow, 8) + "");
            stu.getjComboBox7().setSelectedItem(table.getValueAt(selectedRow, 4) + "");
            stu.getjComboBox8().setSelectedItem(table.getValueAt(selectedRow, 5) + "");
            stu.getjComboBox9().setSelectedItem(table.getValueAt(selectedRow, 6) + "");
         
           stu.getjTextField20().setText(table.getValueAt(selectedRow, 7) + "");
           
            q1 = "SELECT * from images where personID = " + table.getValueAt(selectedRow, 0) + " and category = 'students'";
            String q2 = "SELECT * from students where studentID ='"+personID+"'";
            String path = "";
            try {
                pst = con.prepareStatement(q1);
                u = pst.executeQuery();
                if (u.next()) {
                    path = u.getString("source");
                    System.out.println(path);
                    ImageIcon image = new ImageIcon(path);
                    Rectangle rect = stu.getjLabel2().getBounds();
                    Image scaledImage = image.getImage().getScaledInstance(rect.width, rect.height, Image.SCALE_DEFAULT);
                    image = new ImageIcon(scaledImage);
                    stu.getjLabel2().setIcon(image);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                pst = con.prepareStatement(q2);
                u = pst.executeQuery();
                if (u.next()) {
              stu.getjTextField21().setText(u.getString("mothersname") + "");
              stu.getjTextField22().setText(u.getInt("mphone") + "");
              stu.getjTextField23().setText(u.getString("fathersname") + "");
              stu.getjTextField24().setText(u.getString("fphone") + "");
              stu.getjTextArea5().setText(u.getString("pobox") + "");
              stu.getjTextArea6().setText(u.getString("resaddr") + "");
                  
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            stu.setVisible(true);

        }
    
    }

    public void getSelectedData(JTable table) {
        //   Get the selected row from the table.
        ResultSet u;
        String q1 = null;
        int selectedRow = table.getSelectedRow();

        if (jade.getColumnName(0).equalsIgnoreCase("studentID")) {
            EditStudent stu = new EditStudent();
            personID = Integer.parseInt((table.getValueAt(selectedRow, 0)).toString());
            stu.getjTextField17().setText(table.getValueAt(selectedRow, 1) + "");
            stu.getjTextField1().setText(table.getValueAt(selectedRow, 2) + "");
            stu.getjTextField18().setText(table.getValueAt(selectedRow, 3) + "");
            stu.getjTextField19().setText(table.getValueAt(selectedRow, 8) + "");
            stu.getjComboBox7().setSelectedItem(table.getValueAt(selectedRow, 4) + "");
            stu.getjComboBox8().setSelectedItem(table.getValueAt(selectedRow, 5) + "");
            stu.getjComboBox9().setSelectedItem(table.getValueAt(selectedRow, 6) + "");
         
           stu.getjTextField20().setText(table.getValueAt(selectedRow, 7) + "");
           
            q1 = "SELECT * from images where personID = " + table.getValueAt(selectedRow, 0) + " and category = 'students'";
            String q2 = "SELECT * from students where studentID ='"+personID+"'";
            String path = "";
            try {
                pst = con.prepareStatement(q1);
                u = pst.executeQuery();
                if (u.next()) {
                    path = u.getString("source");
                    System.out.println(path);
                    ImageIcon image = new ImageIcon(path);
                    Rectangle rect = stu.getjLabel2().getBounds();
                    Image scaledImage = image.getImage().getScaledInstance(rect.width, rect.height, Image.SCALE_DEFAULT);
                    image = new ImageIcon(scaledImage);
                    stu.getjLabel2().setIcon(image);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                pst = con.prepareStatement(q2);
                u = pst.executeQuery();
                if (u.next()) {
              stu.getjTextField21().setText(u.getString("mothersname") + "");
              stu.getjTextField22().setText(u.getInt("mphone") + "");
              stu.getjTextField23().setText(u.getString("fathersname") + "");
              stu.getjTextField24().setText(u.getString("fphone") + "");
              stu.getjTextArea5().setText(u.getString("pobox") + "");
              stu.getjTextArea6().setText(u.getString("resaddr") + "");
                  
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            stu.setVisible(true);

        } else if (jade.getColumnName(0).equalsIgnoreCase("staffID")) {
            EditStaff stf = new EditStaff();
            personID = Integer.parseInt((table.getValueAt(selectedRow, 0)).toString());
            stf.getjTextField1().setText(table.getValueAt(selectedRow, 1) + "");
            stf.getjTextField2().setText(table.getValueAt(selectedRow, 2) + "");
            stf.getjTextField3().setText(table.getValueAt(selectedRow, 3) + "");
            stf.getjTextField4().setText(table.getValueAt(selectedRow, 10) + "");
            stf.getjComboBox1().setSelectedItem(table.getValueAt(selectedRow, 6) + "");
            stf.getjTextField5().setText(table.getValueAt(selectedRow, 4) + "");
            stf.getjTextField6().setText(table.getValueAt(selectedRow, 5) + "");
            stf.getjComboBox2().setSelectedItem(table.getValueAt(selectedRow, 7) + "");
            stf.getjTextField8().setText(table.getValueAt(selectedRow, 8) + "");
            stf.getjTextArea1().setText(table.getValueAt(selectedRow, 9) + "");
            stf.getjTextField5().setText(table.getValueAt(selectedRow, 4) + "");
            q1 = "SELECT * from images where personID = " + table.getValueAt(selectedRow, 0) + " and category = 'staff'";
            String path = "";
            try {
                pst = con.prepareStatement(q1);
                u = pst.executeQuery();
                if (u.next()) {
                    path = u.getString("source");
                    System.out.println(path);
                    ImageIcon image = new ImageIcon(path);
                    Rectangle rect = stf.getjLabel15().getBounds();
                    Image scaledImage = image.getImage().getScaledInstance(rect.width, rect.height, Image.SCALE_DEFAULT);
                    image = new ImageIcon(scaledImage);
                    stf.getjLabel15().setIcon(image);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            stf.setVisible(true);
        } else if (jade.getColumnName(0).equalsIgnoreCase("teacherID")) {
            EditTeacher tch = new EditTeacher();
            personID = Integer.parseInt((table.getValueAt(selectedRow, 0)).toString());
            tch.getjTextField1().setText(table.getValueAt(selectedRow, 1) + "");
            tch.getjTextField2().setText(table.getValueAt(selectedRow, 2) + "");
            tch.getjTextField3().setText(table.getValueAt(selectedRow, 3) + "");
            tch.getjComboBox1().setSelectedItem(table.getValueAt(selectedRow, 4) + "");
            tch.getjTextField4().setText(table.getValueAt(selectedRow, 5) + "");
            tch.getjTextArea2().setText(table.getValueAt(selectedRow, 6) + "");
            tch.getjTextField6().setText(table.getValueAt(selectedRow, 7) + "");
            tch.getjComboBox2().setSelectedItem(table.getValueAt(selectedRow, 8) + "");
            tch.getjTextField8().setText(table.getValueAt(selectedRow, 9) + "");
            tch.getjTextArea1().setText(table.getValueAt(selectedRow, 10) + "");
            q1 = "SELECT * from images where personID = " + table.getValueAt(selectedRow, 0) + " and category = students";
            String path = "";
            try {
                pst = con.prepareStatement(q1);
                u = pst.executeQuery();
                if (u.next()) {
                    path = u.getString("source");
                    System.out.println(path);
                    ImageIcon image = new ImageIcon(path);
                    Rectangle rect = tch.getjLabel4().getBounds();
                    Image scaledImage = image.getImage().getScaledInstance(rect.width, rect.height, Image.SCALE_DEFAULT);
                    image = new ImageIcon(scaledImage);
                    tch.getjLabel4().setIcon(image);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            tch.setVisible(true);
        } else if (jade.getColumnName(0).equalsIgnoreCase("messageID")) {
            AddMessage msg = new AddMessage();
            personID = Integer.parseInt((table.getValueAt(selectedRow, 0)).toString());
            msg.getjTextField1().setText(table.getValueAt(selectedRow, 1) + "");
            msg.getjTextField2().setText(table.getValueAt(selectedRow, 2) + "");
            msg.getjTextArea1().setText(table.getValueAt(selectedRow, 3) + "");
            msg.getjTextArea2().setText(table.getValueAt(selectedRow, 4) + "");

            msg.setVisible(true);
        } else if (jade.getColumnName(0).equalsIgnoreCase("expenseID")) {
            EditExpense exp = new EditExpense();
            personID = Integer.parseInt((table.getValueAt(selectedRow, 0)).toString());
            exp.getjComboBox1().setSelectedItem(table.getValueAt(selectedRow, 1) + "");
            exp.getjTextField2().setText(table.getValueAt(selectedRow, 2) + "");
            exp.getjTextField1().setText(table.getValueAt(selectedRow, 3) + "");
            exp.getjTextArea1().setText(table.getValueAt(selectedRow, 4) + "");
            exp.getjTextArea2().setText(table.getValueAt(selectedRow, 5) + "");
            exp.getjComboBox1().setSelectedItem(table.getValueAt(selectedRow, 6) + "");
            exp.setVisible(true);
        } else if (jade.getColumnName(0).equalsIgnoreCase("revenueID")) {
            EditRevenue rev = new EditRevenue();
            personID = Integer.parseInt((table.getValueAt(selectedRow, 0)).toString());
            rev.getjComboBox1().setSelectedItem(table.getValueAt(selectedRow, 1) + "");
            rev.getjTextField2().setText(table.getValueAt(selectedRow, 2) + "");
            rev.getjTextField1().setText(table.getValueAt(selectedRow, 3) + "");
            rev.getjTextArea1().setText(table.getValueAt(selectedRow, 4) + "");
            rev.getjTextArea2().setText(table.getValueAt(selectedRow, 5) + "");
            rev.getjComboBox1().setSelectedItem(table.getValueAt(selectedRow, 6) + "");
            rev.setVisible(true);
            rev.setVisible(true);

        }
    }
    
    public JLabel getLogin(){
    
        return this.jLabel2;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
